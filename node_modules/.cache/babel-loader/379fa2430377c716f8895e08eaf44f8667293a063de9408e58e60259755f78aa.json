{"ast":null,"code":"var _s = $RefreshSig$();\nexport default function validate(input) {\n  _s();\n  const AllTemps = useSelector(state => state.temps);\n  console.log(\"input en validate\", input);\n  const contienenumero = /^\\d+$/;\n  const errors = {};\n  if (!input.name) errors.name = \"Debe Ingresar un npmbre\";else if (!contienenumero.test(Number(input.maxHeight))) errors.maxHeight = \"La altura debe ser un número.\";else if (!contienenumero.test(input.minHeight)) errors.minHeight = \"La altura debe ser un número.\";else if (!contienenumero.test(input.weightMax)) errors.weightMax = \"El peso debe ser un número.\";else if (!contienenumero.test(input.weightMin)) errors.weightMin = \"El peso debe ser un número.\";else if (!contienenumero.test(input.spanLife)) errors.spanLife = \"La expectativa de Vida debe ser un numero.\";else if (!AllTemps.name.includes(input.temperament)) errors.temperament = \"El temperamento ingresado es incorrecto\";\n  return errors;\n}\n_s(validate, \"YUa6dNWsTg3n2bkmk1N6tXmnJH0=\", true);","map":{"version":3,"names":["validate","input","_s","AllTemps","useSelector","state","temps","console","log","contienenumero","errors","name","test","Number","maxHeight","minHeight","weightMax","weightMin","spanLife","includes","temperament"],"sources":["C:/Users/emi87/OneDrive/Escritorio/Pi Dogs/PI-Dogs-main/client/src/Validation.js"],"sourcesContent":["\r\nexport default function validate(input){\r\n    const AllTemps = useSelector((state) => state.temps);\r\n\r\n    console.log(\"input en validate\", input)\r\nconst contienenumero=  /^\\d+$/\r\n\r\nconst errors = {}\r\n if (!input.name)  errors.name = \"Debe Ingresar un npmbre\"     \r\nelse if  (!contienenumero.test(Number(input.maxHeight)))  errors.maxHeight = \"La altura debe ser un número.\"     \r\nelse if (!contienenumero.test(input.minHeight))  errors.minHeight = \"La altura debe ser un número.\"     \r\nelse if (!contienenumero.test(input.weightMax))  errors.weightMax = \"El peso debe ser un número.\"     \r\nelse if (!contienenumero.test(input.weightMin))  errors.weightMin = \"El peso debe ser un número.\"     \r\nelse if (!contienenumero.test(input.spanLife))  errors.spanLife = \"La expectativa de Vida debe ser un numero.\"     \r\nelse if (!AllTemps.name.includes(input.temperament)) errors.temperament = \"El temperamento ingresado es incorrecto\"\r\nreturn errors\r\n}   "],"mappings":";AACA,eAAe,SAASA,QAAQA,CAACC,KAAK,EAAC;EAAAC,EAAA;EACnC,MAAMC,QAAQ,GAAGC,WAAW,CAAEC,KAAK,IAAKA,KAAK,CAACC,KAAK,CAAC;EAEpDC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEP,KAAK,CAAC;EAC3C,MAAMQ,cAAc,GAAG,OAAO;EAE9B,MAAMC,MAAM,GAAG,CAAC,CAAC;EAChB,IAAI,CAACT,KAAK,CAACU,IAAI,EAAGD,MAAM,CAACC,IAAI,GAAG,yBAAyB,MACrD,IAAK,CAACF,cAAc,CAACG,IAAI,CAACC,MAAM,CAACZ,KAAK,CAACa,SAAS,CAAC,CAAC,EAAGJ,MAAM,CAACI,SAAS,GAAG,+BAA+B,MACvG,IAAI,CAACL,cAAc,CAACG,IAAI,CAACX,KAAK,CAACc,SAAS,CAAC,EAAGL,MAAM,CAACK,SAAS,GAAG,+BAA+B,MAC9F,IAAI,CAACN,cAAc,CAACG,IAAI,CAACX,KAAK,CAACe,SAAS,CAAC,EAAGN,MAAM,CAACM,SAAS,GAAG,6BAA6B,MAC5F,IAAI,CAACP,cAAc,CAACG,IAAI,CAACX,KAAK,CAACgB,SAAS,CAAC,EAAGP,MAAM,CAACO,SAAS,GAAG,6BAA6B,MAC5F,IAAI,CAACR,cAAc,CAACG,IAAI,CAACX,KAAK,CAACiB,QAAQ,CAAC,EAAGR,MAAM,CAACQ,QAAQ,GAAG,4CAA4C,MACzG,IAAI,CAACf,QAAQ,CAACQ,IAAI,CAACQ,QAAQ,CAAClB,KAAK,CAACmB,WAAW,CAAC,EAAEV,MAAM,CAACU,WAAW,GAAG,yCAAyC;EACnH,OAAOV,MAAM;AACb;AAACR,EAAA,CAfuBF,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}