{"ast":null,"code":"export default function validate(input, Temps) {\n  const cal = Temps;\n  console.log(cal);\n  const contienenumero = /^\\d+$/;\n  const errors = {};\n  if (!input.name) errors.name = \"Debe Ingresar un npmbre\";else if (Temps.some(temp => temp.name === input.temperament)) errors.setTemperament = true;else if (!contienenumero.test(Number(input.maxHeight))) errors.maxHeight = \"La altura debe ser un número.\";else if (!contienenumero.test(input.minHeight)) errors.minHeight = \"La altura debe ser un número.\";else if (!contienenumero.test(input.weightMax)) errors.weightMax = \"El peso debe ser un número.\";else if (!contienenumero.test(input.weightMin)) errors.weightMin = \"El peso debe ser un número.\";else if (!contienenumero.test(input.spanLife)) errors.spanLife = \"La expectativa de Vida debe ser un numero.\";else if (!Temps || !Array.isArray(Temps) || !Temps.some(temp => temp.name === input.temperament)) {\n    errors.temperament = \"El temperamento ingresado es incorrecto\", errors.setTemperament = false;\n  }\n  return errors;\n}","map":{"version":3,"names":["validate","input","Temps","cal","console","log","contienenumero","errors","name","some","temp","temperament","setTemperament","test","Number","maxHeight","minHeight","weightMax","weightMin","spanLife","Array","isArray"],"sources":["C:/Users/emi87/OneDrive/Escritorio/Pi Dogs/PI-Dogs-main/client/src/Validation.js"],"sourcesContent":["\r\n\r\nexport default function validate(input,Temps){\r\n\r\nconst cal = Temps\r\n    console.log(cal)\r\nconst contienenumero=  /^\\d+$/\r\n\r\nconst errors = {}\r\n if (!input.name)  errors.name = \"Debe Ingresar un npmbre\"     \r\n else if (Temps.some(temp => temp.name === input.temperament)) errors.setTemperament = true\r\nelse if  (!contienenumero.test(Number(input.maxHeight)))  errors.maxHeight = \"La altura debe ser un número.\"     \r\nelse if (!contienenumero.test(input.minHeight))  errors.minHeight = \"La altura debe ser un número.\"     \r\nelse if (!contienenumero.test(input.weightMax))  errors.weightMax = \"El peso debe ser un número.\"     \r\nelse if (!contienenumero.test(input.weightMin))  errors.weightMin = \"El peso debe ser un número.\"     \r\nelse if (!contienenumero.test(input.spanLife))  errors.spanLife = \"La expectativa de Vida debe ser un numero.\"     \r\nelse if (!Temps || !Array.isArray(Temps) || !Temps.some(temp => temp.name === input.temperament)) { errors.temperament = \"El temperamento ingresado es incorrecto\", errors.setTemperament=false}   \r\n\r\nreturn errors}"],"mappings":"AAEA,eAAe,SAASA,QAAQA,CAACC,KAAK,EAACC,KAAK,EAAC;EAE7C,MAAMC,GAAG,GAAGD,KAAK;EACbE,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EACpB,MAAMG,cAAc,GAAG,OAAO;EAE9B,MAAMC,MAAM,GAAG,CAAC,CAAC;EAChB,IAAI,CAACN,KAAK,CAACO,IAAI,EAAGD,MAAM,CAACC,IAAI,GAAG,yBAAyB,MACpD,IAAIN,KAAK,CAACO,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACF,IAAI,KAAKP,KAAK,CAACU,WAAW,CAAC,EAAEJ,MAAM,CAACK,cAAc,GAAG,IAAI,MACtF,IAAK,CAACN,cAAc,CAACO,IAAI,CAACC,MAAM,CAACb,KAAK,CAACc,SAAS,CAAC,CAAC,EAAGR,MAAM,CAACQ,SAAS,GAAG,+BAA+B,MACvG,IAAI,CAACT,cAAc,CAACO,IAAI,CAACZ,KAAK,CAACe,SAAS,CAAC,EAAGT,MAAM,CAACS,SAAS,GAAG,+BAA+B,MAC9F,IAAI,CAACV,cAAc,CAACO,IAAI,CAACZ,KAAK,CAACgB,SAAS,CAAC,EAAGV,MAAM,CAACU,SAAS,GAAG,6BAA6B,MAC5F,IAAI,CAACX,cAAc,CAACO,IAAI,CAACZ,KAAK,CAACiB,SAAS,CAAC,EAAGX,MAAM,CAACW,SAAS,GAAG,6BAA6B,MAC5F,IAAI,CAACZ,cAAc,CAACO,IAAI,CAACZ,KAAK,CAACkB,QAAQ,CAAC,EAAGZ,MAAM,CAACY,QAAQ,GAAG,4CAA4C,MACzG,IAAI,CAACjB,KAAK,IAAI,CAACkB,KAAK,CAACC,OAAO,CAACnB,KAAK,CAAC,IAAI,CAACA,KAAK,CAACO,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACF,IAAI,KAAKP,KAAK,CAACU,WAAW,CAAC,EAAE;IAAEJ,MAAM,CAACI,WAAW,GAAG,yCAAyC,EAAEJ,MAAM,CAACK,cAAc,GAAC,KAAK;EAAA;EAE/L,OAAOL,MAAM;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}