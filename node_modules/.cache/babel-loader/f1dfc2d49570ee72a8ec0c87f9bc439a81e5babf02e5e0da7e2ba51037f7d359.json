{"ast":null,"code":"export default function validate(input, Temps) {\n  const cal = Temps;\n  console.log(cal);\n  const contienenumero = /^\\d+$/;\n  const errors = {};\n  errors.temperament = \"Debe ingresar los campos previos primero\";\n  if (!input.name) {\n    errors.name = \"Debe ingresar un nombre\";\n  } else if (!input.maxHeight) {\n    errors.maxHeight = null;\n  } else if (!contienenumero.test(Number(input.maxHeight))) {\n    errors.maxHeight = \"La altura debe ser un número\";\n  } else if (!input.minHeight) {\n    errors.minHeight = null;\n  } else if (!contienenumero.test(input.minHeight)) errors.minHeight = \"La altura debe ser un número.\";else if (!input.weightMax) {\n    errors.weightMax = null;\n  } else if (!contienenumero.test(input.weightMax)) errors.weightMax = \"El peso debe ser un número.\";else if (!input.weightMin) {\n    errors.weightMin = null;\n  } else if (!contienenumero.test(input.weightMin)) errors.weightMin = \"El peso debe ser un número.\";else if (!input.spanLife) {\n    errors.spanLife = null;\n  } else if (!contienenumero.test(input.spanLife)) errors.spanLife = \"La expectativa de Vida debe ser un numero.\";else if (!Temps.some(temp => temp.name === input.temperament)) {\n    errors.temperament = \"El temperamento ingresado es incorrecto\";\n  } else if (Temps.some(temp => temp.name === input.temperament)) {\n    errors.temperament = null;\n  } else if (!input.name || !input.maxHeight || !input.minHeight || !input.minHeight || !input.weightMax || !input.weightMin || !input.spanLife) {\n    errors.allFilled = \"Hay campos obligatorios por completar.\";\n  }\n\n  //  else if (Temps.some(temp => temp.name === input.temperament)) errors.setTemperament = true\n\n  return errors;\n}","map":{"version":3,"names":["validate","input","Temps","cal","console","log","contienenumero","errors","temperament","name","maxHeight","test","Number","minHeight","weightMax","weightMin","spanLife","some","temp","allFilled"],"sources":["C:/Users/emi87/OneDrive/Escritorio/Pi Dogs/PI-Dogs-main/client/src/Validation.js"],"sourcesContent":["\r\n\r\nexport default function validate(input,Temps){\r\n\r\nconst cal = Temps\r\n    console.log(cal)\r\nconst contienenumero=  /^\\d+$/\r\n\r\nconst errors = {}\r\nerrors.temperament =\"Debe ingresar los campos previos primero\"\r\nif (!input.name) {\r\n    errors.name = \"Debe ingresar un nombre\";\r\n  } else if (!input.maxHeight) {\r\n    errors.maxHeight = null\r\n  } else if (!contienenumero.test(Number(input.maxHeight))) {\r\n    errors.maxHeight = \"La altura debe ser un número\"}\r\n    else if (!input.minHeight) {\r\n        errors.minHeight = null}\r\n else if (!contienenumero.test(input.minHeight))  errors.minHeight = \"La altura debe ser un número.\"    \r\n else if (!input.weightMax) {\r\n    errors.weightMax = null}\r\n else if (!contienenumero.test(input.weightMax))  errors.weightMax = \"El peso debe ser un número.\" \r\n else if (!input.weightMin) {\r\n    errors.weightMin = null}    \r\n else if (!contienenumero.test(input.weightMin))  errors.weightMin = \"El peso debe ser un número.\"     \r\n else if (!input.spanLife) {\r\n    errors.spanLife = null}    \r\n else if (!contienenumero.test(input.spanLife))  errors.spanLife = \"La expectativa de Vida debe ser un numero.\"     \r\n\r\n else if ( !Temps.some(temp => temp.name === input.temperament)) { errors.temperament = \"El temperamento ingresado es incorrecto\" } \r\n else if ( Temps.some(temp => temp.name === input.temperament)) { errors.temperament = null} \r\n\r\n else if ( !input.name||!input.maxHeight||!input.minHeight||!input.minHeight||!input.weightMax||!input.weightMin||!input.spanLife) { errors.allFilled = \"Hay campos obligatorios por completar.\" }    \r\n\r\n//  else if (Temps.some(temp => temp.name === input.temperament)) errors.setTemperament = true\r\n \r\nreturn errors}"],"mappings":"AAEA,eAAe,SAASA,QAAQA,CAACC,KAAK,EAACC,KAAK,EAAC;EAE7C,MAAMC,GAAG,GAAGD,KAAK;EACbE,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EACpB,MAAMG,cAAc,GAAG,OAAO;EAE9B,MAAMC,MAAM,GAAG,CAAC,CAAC;EACjBA,MAAM,CAACC,WAAW,GAAE,0CAA0C;EAC9D,IAAI,CAACP,KAAK,CAACQ,IAAI,EAAE;IACbF,MAAM,CAACE,IAAI,GAAG,yBAAyB;EACzC,CAAC,MAAM,IAAI,CAACR,KAAK,CAACS,SAAS,EAAE;IAC3BH,MAAM,CAACG,SAAS,GAAG,IAAI;EACzB,CAAC,MAAM,IAAI,CAACJ,cAAc,CAACK,IAAI,CAACC,MAAM,CAACX,KAAK,CAACS,SAAS,CAAC,CAAC,EAAE;IACxDH,MAAM,CAACG,SAAS,GAAG,8BAA8B;EAAA,CAAC,MAC7C,IAAI,CAACT,KAAK,CAACY,SAAS,EAAE;IACvBN,MAAM,CAACM,SAAS,GAAG,IAAI;EAAA,CAAC,MAC1B,IAAI,CAACP,cAAc,CAACK,IAAI,CAACV,KAAK,CAACY,SAAS,CAAC,EAAGN,MAAM,CAACM,SAAS,GAAG,+BAA+B,MAC9F,IAAI,CAACZ,KAAK,CAACa,SAAS,EAAE;IACxBP,MAAM,CAACO,SAAS,GAAG,IAAI;EAAA,CAAC,MACtB,IAAI,CAACR,cAAc,CAACK,IAAI,CAACV,KAAK,CAACa,SAAS,CAAC,EAAGP,MAAM,CAACO,SAAS,GAAG,6BAA6B,MAC5F,IAAI,CAACb,KAAK,CAACc,SAAS,EAAE;IACxBR,MAAM,CAACQ,SAAS,GAAG,IAAI;EAAA,CAAC,MACtB,IAAI,CAACT,cAAc,CAACK,IAAI,CAACV,KAAK,CAACc,SAAS,CAAC,EAAGR,MAAM,CAACQ,SAAS,GAAG,6BAA6B,MAC5F,IAAI,CAACd,KAAK,CAACe,QAAQ,EAAE;IACvBT,MAAM,CAACS,QAAQ,GAAG,IAAI;EAAA,CAAC,MACrB,IAAI,CAACV,cAAc,CAACK,IAAI,CAACV,KAAK,CAACe,QAAQ,CAAC,EAAGT,MAAM,CAACS,QAAQ,GAAG,4CAA4C,MAEzG,IAAK,CAACd,KAAK,CAACe,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACT,IAAI,KAAKR,KAAK,CAACO,WAAW,CAAC,EAAE;IAAED,MAAM,CAACC,WAAW,GAAG,yCAAyC;EAAC,CAAC,MAC7H,IAAKN,KAAK,CAACe,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACT,IAAI,KAAKR,KAAK,CAACO,WAAW,CAAC,EAAE;IAAED,MAAM,CAACC,WAAW,GAAG,IAAI;EAAA,CAAC,MAEtF,IAAK,CAACP,KAAK,CAACQ,IAAI,IAAE,CAACR,KAAK,CAACS,SAAS,IAAE,CAACT,KAAK,CAACY,SAAS,IAAE,CAACZ,KAAK,CAACY,SAAS,IAAE,CAACZ,KAAK,CAACa,SAAS,IAAE,CAACb,KAAK,CAACc,SAAS,IAAE,CAACd,KAAK,CAACe,QAAQ,EAAE;IAAET,MAAM,CAACY,SAAS,GAAG,wCAAwC;EAAC;;EAEjM;;EAEA,OAAOZ,MAAM;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}