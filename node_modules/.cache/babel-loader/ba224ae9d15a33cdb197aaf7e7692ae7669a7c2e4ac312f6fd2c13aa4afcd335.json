{"ast":null,"code":"export default function validate(input) {\n  console.log(\"input en validate\", input);\n  const validacionMail = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n  const contienenumero = /\\d/;\n  const errors = {};\n  if (!input.name) errors.name = \"Debe Ingresar un npmbre\";else if (!contienenumero.test(input.maxHeight)) errors.maxHeight = \"La altura debe ser un número.\";else if (!contienenumero.test(input.minHeight)) errors.minHeight = \"La altura debe ser un número.\";else if (!contienenumero.test(input.weightMax)) errors.weightMax = \"El peso debe ser un número.\";else if (!contienenumero.test(input.weightMin)) errors.weightMin = \"El peso debe ser un número.\";else if (!contienenumero.test(input.spanLife)) errors.spanLife = \"La expectativa de Vida debe ser un numero.\";else if (input.temperament !== \"Cachu\") errors.temperament = \"Solo Se permiten cachus.\";else errors = {};\n  return errors;\n}","map":{"version":3,"names":["validate","input","console","log","validacionMail","contienenumero","errors","name","test","maxHeight","minHeight","weightMax","weightMin","spanLife","temperament"],"sources":["C:/Users/emi87/OneDrive/Escritorio/Pi Dogs/PI-Dogs-main/client/src/Validation.js"],"sourcesContent":["\r\nexport default function validate(input){\r\n\r\n    console.log(\"input en validate\", input)\r\nconst validacionMail= /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\r\nconst contienenumero=  /\\d/\r\n\r\nconst errors = {}\r\n if (!input.name)  errors.name = \"Debe Ingresar un npmbre\"     \r\nelse if  (!contienenumero.test(input.maxHeight))  errors.maxHeight = \"La altura debe ser un número.\"     \r\nelse if (!contienenumero.test(input.minHeight))  errors.minHeight = \"La altura debe ser un número.\"     \r\nelse if (!contienenumero.test(input.weightMax))  errors.weightMax = \"El peso debe ser un número.\"     \r\nelse if (!contienenumero.test(input.weightMin))  errors.weightMin = \"El peso debe ser un número.\"     \r\nelse if (!contienenumero.test(input.spanLife))  errors.spanLife = \"La expectativa de Vida debe ser un numero.\"     \r\nelse if ((input.temperament)!==\"Cachu\")  errors.temperament = \"Solo Se permiten cachus.\"     \r\nelse errors = {}\r\nreturn errors\r\n}"],"mappings":"AACA,eAAe,SAASA,QAAQA,CAACC,KAAK,EAAC;EAEnCC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,KAAK,CAAC;EAC3C,MAAMG,cAAc,GAAE,iDAAiD;EACvE,MAAMC,cAAc,GAAG,IAAI;EAE3B,MAAMC,MAAM,GAAG,CAAC,CAAC;EAChB,IAAI,CAACL,KAAK,CAACM,IAAI,EAAGD,MAAM,CAACC,IAAI,GAAG,yBAAyB,MACrD,IAAK,CAACF,cAAc,CAACG,IAAI,CAACP,KAAK,CAACQ,SAAS,CAAC,EAAGH,MAAM,CAACG,SAAS,GAAG,+BAA+B,MAC/F,IAAI,CAACJ,cAAc,CAACG,IAAI,CAACP,KAAK,CAACS,SAAS,CAAC,EAAGJ,MAAM,CAACI,SAAS,GAAG,+BAA+B,MAC9F,IAAI,CAACL,cAAc,CAACG,IAAI,CAACP,KAAK,CAACU,SAAS,CAAC,EAAGL,MAAM,CAACK,SAAS,GAAG,6BAA6B,MAC5F,IAAI,CAACN,cAAc,CAACG,IAAI,CAACP,KAAK,CAACW,SAAS,CAAC,EAAGN,MAAM,CAACM,SAAS,GAAG,6BAA6B,MAC5F,IAAI,CAACP,cAAc,CAACG,IAAI,CAACP,KAAK,CAACY,QAAQ,CAAC,EAAGP,MAAM,CAACO,QAAQ,GAAG,4CAA4C,MACzG,IAAKZ,KAAK,CAACa,WAAW,KAAI,OAAO,EAAGR,MAAM,CAACQ,WAAW,GAAG,0BAA0B,MACnFR,MAAM,GAAG,CAAC,CAAC;EAChB,OAAOA,MAAM;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}